GH Token: 
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
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
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

************************************
************************************

Domain
    Class
        Season
        Tournament
        Team
        Player
        Match 
        EventMatch
        *TeamSanction
        *Timetable
        *Table >> season, tournamen, team, points = amount_match_win * X

    Interface
        SeasonRepository
        TournamentRepository
        TeamRepository
        PlayerRepository
        MatchRepository
        EventMatchRepository

Domain/Entity/{Entity}
Domain/Contract/Repository/{Entity}RepositoryInterface

Application
    Season
        CRUD
            Create
                CreateSeasonUseCase
                CreateSeasonDTO >> agafa tota la info + passar al execute UseCase
    UseCases
        Season
            CreateSeasonUseCase
            ReadSeasonUseCase (find ?¿) >> search: puede que no existe /find: buscar sabiendo que existe
            UpdateSeasonUseCase
            DeleteSeasonUseCase
        Tournament
            CRUD
        Team
            CRUD
        Player
            CRUD
        Match
            CRUD
        EventMatch
            CRUD

Application/{Entity}/CRUD/{C/R/U/D}{Entity}UseCase


Infrastructure
    Persistence
        PersistenceEngineDomainEntityRepository

Infrastructure/Persistence/{Entity}/{PersistenceEngine}{Entity}Repository

UI >> UserInterface
    Controller (postman/web/...)
        Season
            CRUD
                CreateSeasonController
    CLI (terminal: artisan/commands...)
    Subscriber (rabbit/...)

************************************
************************************

[No CQRS]
1º CRUD Season
    Controller (DTO Application)
        - controller monta DTO
        - controller crea UseCase 
            (new UseCase w/ param: Persistence -FileSeasonRepository)
            (FileSeasonRepository crea archivo con info serializada fopen w+)
            (test: postman w/ php file, nginx root)
        - controller envia DTO a UseCase (application service)


Docker
    docker run -d --name learning-marc -v /home/marc/Documentos/marc/learning/ddd-f7/code:/var/www/html/ php:8.0.12-fpm-alpine3.13        

Flujo
    (VITAL)
        UserInterface >> crea Commanda (DTO) >> CommandHandler >> useCase >> new Entity >> persist
        UserInterface >> crea Commanda (DTO) >> useCase >> new Entity >> persist

    UserInterface :: controllers/cli => punt entrada usuari
        - es recupera info necessaria => new xxxCommand = DTO
        - es crida UseCase(DTO) normalment injectar dependencias (repository)

    UseCase :: s'encarrega d'executar la lógica

2º
    cambio persistence file >> csv (https://csv.thephpleague.com/)
    compeltar CRUD

************************************
************************************

code/Fut7/Infrastructure/Persistence/Shared/CsvRepository.php >> equivale a Doctrine en proyecto Symfony

************************************
************************************

abstract/class/interface

abstract(trait) >> juntar cosas comunes/compartidas
interface >> definir reglas

class extends: class / abstract class
class implements: interface

************************************
************************************

CLI Application >> propio bin/console

next:
    [X] terminar CRUD Tournament
    [X] iniciar test CreateSeason
        (PHP Unit) how execute test: ./code/vendor/phpunit/phpunit/phpunit tests/StackTest.php

************************************
************************************

[X] revisar finds (return objs X en lugar de arrays X)
[X] cambio uniqid >> uuid (ramsey)
[ ] continuar test